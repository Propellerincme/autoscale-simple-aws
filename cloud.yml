AWSTemplateFormatVersion: "2010-09-09"
Description: "VPC, NAT, Bastion host and other base resources"

Parameters:
  ProjectName:
    Type: String
    Default: "project"
  BastionKey:
    Type: AWS::EC2::KeyPair::KeyName
    Default: "bastion-key"
  NATSubnetCidr:
    Type: String
    Default: "10.0.0.0/24"

Mappings:
  RegionMap:
    eu-central-1:
      "64": ami-0bdf93799014acdc4 # Ubuntu 18.04 20180912
    eu-west-1:
      "64": ami-00035f41c82244dab # Ubuntu 18.04 20180912
    eu-west-2:
      "64": ami-0b0a60c0a2bd40612 # Ubuntu 18.04 20180912
    eu-west-3:
      "64": ami-08182c55a1c188dee # Ubuntu 18.04 20180912
    us-east-1:
      "64": ami-0ac019f4fcb7cb7e6 # Ubuntu 18.04 20180912
    us-east-2:
      "64": ami-0f65671a86f061fcd # Ubuntu 18.04 20180912
    us-west-1:
      "64": ami-063aa838bd7631e0b # Ubuntu 18.04 20180912
    us-west-2:
      "64": ami-0bbe6b35405ecebdb # Ubuntu 18.04 20180912

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsSupport: True
      EnableDnsHostnames: True
      Tags:
        - Key: "Name"
          Value: !Sub ${ProjectName}-vpc

  Ipv6VPCCidrBlock:
    Type: "AWS::EC2::VPCCidrBlock"
    Properties:
      AmazonProvidedIpv6CidrBlock: true
      VpcId: !Ref VPC

  # --- Route tables ---
  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: !Sub ${ProjectName}-public-routes

  PrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: !Sub ${ProjectName}-private-routes

  # --- Internet Gateway ---
  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: !Sub ${ProjectName}-internet-gateway

  InternetGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  InternetGatewayRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable

  S3Endpoint:
    Type: "AWS::EC2::VPCEndpoint"
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
              - "*"
            Resource:
              - "arn:aws:s3::*"
      RouteTableIds:
        - !Ref PublicRouteTable
        - !Ref PrivateRouteTable
      ServiceName: !Join
        - ""
        - - com.amazonaws.
          - !Ref "AWS::Region"
          - .s3
      VpcId: !Ref VPC

  # --- NAT Gateway ---
  NatGateway:
    Type: "AWS::EC2::NatGateway"
    Properties:
      AllocationId: !GetAtt NatGatewayElasticIP.AllocationId
      SubnetId: !Ref NATSubnet
      Tags:
        - Key: "Name"
          Value: !Sub ${ProjectName}
          
  NatGatewayElasticIP:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: "vpc"

  NatGatewayRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref PrivateRouteTable

  # --- NAT subnet ---
  NATSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref NATSubnetCidr
      Ipv6CidrBlock:
        !Join [
          "",
          [
            !Select [
              "0",
              !Split ["00::/56", !Select ["0", !GetAtt VPC.Ipv6CidrBlocks]],
            ],
            "00::/64",
          ],
        ]
      MapPublicIpOnLaunch: True
      Tags:
        - Key: "Name"
          Value: !Sub ${ProjectName}-nat
      VpcId: !Ref VPC
    DependsOn: Ipv6VPCCidrBlock

  NATSubnetRouteTable:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref NATSubnet

  # --- Internal DNS ---
  InternalHostedZone:
    Type: "AWS::Route53::HostedZone"
    Properties:
      Name: !Sub ${ProjectName}
      VPCs:
        - VPCId: !Ref VPC
          VPCRegion: !Ref AWS::Region

  # --- Bastion Host ---
  BastionHost:
    Type: "AWS::EC2::Instance"
    Properties:
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", 64]
      InstanceType: "t3.nano"
      KeyName: !Ref "BastionKey"
      SecurityGroupIds:
        - !Ref BastionHostSecurityGroup
      SubnetId: !Ref NATSubnet
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:
            VolumeSize: 8
            VolumeType: gp2
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get upgrade -yq
          hostnamectl set-hostname bastion.${ProjectName}

      Tags:
        - Key: "Name"
          Value: !Sub bastion.${ProjectName}

  BastionHostSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupName: !Sub bastion
      GroupDescription: bastion
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: !Sub bastion

  BastionHostDNSRecord:
    Type: "AWS::Route53::RecordSet"
    Properties:
      HostedZoneId: !Ref InternalHostedZone
      Name: !Sub bastion.${ProjectName}.
      ResourceRecords:
        - !GetAtt BastionHost.PrivateIp
      TTL: 300
      Type: A

  BastionHostPublicIP:
    Type: "AWS::EC2::EIP"
    Properties:
      InstanceId: !Ref BastionHost
      Domain: !Ref VPC
    DependsOn: InternetGatewayAttachment

Outputs:
  VPC:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: VpcId

  IPV6:
    Description: IPV6 CIDR block
    Value: !Select ["0", !GetAtt VPC.Ipv6CidrBlocks]
    Export:
      Name: Ipv6CidrBlocks

  PublicRouteTable:
    Description: Public route table
    Value: !Ref PublicRouteTable
    Export:
      Name: PublicRouteTableID

  PrivateRouteTable:
    Description: Private route table
    Value: !Ref PrivateRouteTable
    Export:
      Name: PrivateRouteTableID

  InternalHostedZone:
    Description: Internal Route53 VPC hosted zone
    Value: !Ref InternalHostedZone
    Export:
      Name: InternalHostedZoneID

  BastionHostSecurityGroupID:
    Description: Bastion host security group
    Value: !Ref BastionHostSecurityGroup
    Export:
      Name: BastionHostSecurityGroupID
